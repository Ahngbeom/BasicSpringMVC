<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--    <import resource="dispatcher-servlet.xml"/>-->

    <bean id="accessDeniedHandler" class="org.zerock.security.AccessDeniedHandler"/>
    <bean id="loginSuccessHandler" class="org.zerock.security.LoginSuccessHandler"/>
    <bean id="loginFailureHandler" class="org.zerock.security.LoginFailureHandler"/>

    <bean id="CustomAuthenticationProcessingFilter" class="org.zerock.security.filter.CustomAuthenticationProcessingFilter">
        <constructor-arg ref="CustomAuthenticationManager" />
    </bean>
    <bean id="CustomAuthenticationManager" class="org.zerock.security.filter.CustomAuthenticationManager" >
        <constructor-arg ref="customUserDetailService" />
    </bean>
    <bean id="FilterExceptionHandler" class="org.zerock.security.filter.FilterExceptionHandler" />

    <!--    <bean id="customPasswordEncoder" class="org.zerock.security.CustomPasswordEncoder"/>-->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="customUserDetailService" class="org.zerock.security.CustomUserDetailService"/>
    <bean id="logoutSuccessHandler" class="org.zerock.security.CustomLogoutSuccessHandler"/>

    <security:http auto-config="true" use-expressions="true" >
<!--    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="CustomAuthenticationManager" >-->
        <security:csrf disabled="true"/>

        <security:intercept-url pattern="/all" access="permitAll()"/>
        <security:intercept-url pattern="/member" access="hasRole('ROLE_MEMBER')"/>
        <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/**/json" access="hasRole('ROLE_ADMIN')"/>

<!--        <security:custom-filter ref="CustomAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER"/>-->
<!--        <security:custom-filter ref="FilterExceptionHandler" before="FORM_LOGIN_FILTER"/>-->
        <security:form-login login-page="/login" login-processing-url="/login" authentication-success-handler-ref="loginSuccessHandler"
                             authentication-failure-handler-ref="loginFailureHandler" authentication-failure-url="/login" />
        <security:logout logout-url="/logout" success-handler-ref="logoutSuccessHandler" invalidate-session="false" delete-cookies="JSESSIONID,remember-me" />
<!--        <security:logout logout-url="/logout" success-handler-ref="logoutSuccessHandler" invalidate-session="false"/>-->
        <security:remember-me key="SpringSecurityRememberMe"
                              token-validity-seconds="604800"
                              authentication-success-handler-ref="loginSuccessHandler"
                              user-service-ref="customUserDetailService"/>

        <!--        <security:access-denied-handler error-page="/accessError" />-->
        <security:access-denied-handler ref="accessDeniedHandler"/>

    </security:http>

    <security:authentication-manager>
        <!--        <security:authentication-provider>-->
        <security:authentication-provider user-service-ref="customUserDetailService">
            <!--            <security:user-service>-->
            <!--                <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />-->
            <!--                <security:user name="admin" password="{noop}1234" authorities="ROLE_MEMBER, ROLE_ADMIN" />-->
            <!--            </security:user-service>-->

            <!--            <security:jdbc-user-service-->
            <!--                data-source-ref="dataSource" users-by-username-query=" select userid, password, enabled from users where userid = ?"-->
            <!--                authorities-by-username-query="select username, authority from authorities where username = ?"-->
            <!--            />-->

            <!--            <security:password-encoder ref="customPasswordEncoder" />-->
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>